@using InventoryIT.Data
@using Microsoft.AspNetCore.Identity
@inject ApplicationDbContext DbContext;


<table class="table">
    <thead>
        <tr>
            <th>Usuario</th>
            <th>Correo</th>
            <th>Estado</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @if (users != null)
        {
            foreach (IdentityUser item in users)
            {
                <tr>
                    <td>
                        @item.UserName
                    </td>
                    <td>
                        @item.Email
                    </td>
                    @if (item.EmailConfirmed)
                    {
                        <td>
                             Activo
                        </td>
                    }else
                    {
                        <td class="text-danger">
                            Inactivo
                        </td>
                    }
                    <td>
                        <a href="/users/@item.Id" class=" mx-1 bg-info h-100 h-100 rounded rounded-1 p-2 text-white text-decoration-none">
                            <span class="oi oi-eye text-white" aria-hidden="true"></span> Ver
                        </a>
                        <a href="/users/password/@item.Id" class="mx-1 bg-success h-100 h-100 rounded rounded-1 p-2 text-white text-decoration-none">
                            <span class="oi oi-question-mark text-white" aria-hidden="true"> </span> Contraseña
                        </a>
                        <button @onclick="()=>Delete(item)" class="mx-1 btn btn-danger btn-sm  rounded p-2 border border-0  text-white">
                            <span class="oi oi-delete text-white" aria-hidden="true"></span> Desactivar
                        </button>
                    </td>
                </tr>
            }

        }
    </tbody>
</table>


@code{
    [Parameter]
    public List<IdentityUser> users { get; set; }


    protected override async Task OnInitializedAsync()
    {

        base.OnInitializedAsync();
    }

    protected void Delete(IdentityUser U)
    {
        var UR = DbContext.UserRoles.Where(i => i.UserId == U.Id).ToList();
        DbContext.UserRoles.RemoveRange(UR);
        DbContext.Users.Remove(U);
        DbContext.SaveChanges();
        users.Remove(U);
    }
}