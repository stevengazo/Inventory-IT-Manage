@inject IControllerServices<Employee> _EmployeeService

@inject IControllerServices<Departament> _DepartamentService



<div class="border m-2 p-3 rounded rounded-1 shadow">
    <EditForm Model="ObjEmployee">
        <div class="form-group d-flex flex-row justify-content-sm-between px-5 my-2">
            <label>
                @nameof(ObjEmployee.EmployeeId)
            </label>
            <InputNumber @bind-Value="ObjEmployee.EmployeeId" class="form-control form-control-sm w-75"></InputNumber>
        </div>
        <div class="form-group d-flex flex-row justify-content-sm-between px-5 my-2">
            <label>
                @nameof(ObjEmployee.Name)
            </label>
            <InputText @bind-Value="ObjEmployee.Name" class="form-control form-control-sm w-75"></InputText>
        </div>
        <div class="form-group d-flex flex-row justify-content-sm-between px-5 my-2">
            <label>
                @nameof(ObjEmployee.LastName)
            </label>
            <InputText @bind-Value="ObjEmployee.LastName" class="form-control form-control-sm w-75"></InputText>
        </div>
        <div class="form-group d-flex flex-row justify-content-sm-between px-5 my-2">
            <label>
                @nameof(ObjEmployee.SecondLastName)
            </label>
            <InputText @bind-Value="ObjEmployee.SecondLastName" class="form-control form-control-sm w-75"></InputText>
        </div>
        <div class="form-group d-flex flex-row justify-content-sm-between px-5 my-2">
            <label>
                @nameof(ObjEmployee.Email)
            </label>
            <InputText placeholder="sample@gmail.com" @bind-Value="ObjEmployee.Email" class="form-control form-control-sm w-75"></InputText>
        </div>
        <div class="form-group d-flex flex-row justify-content-sm-between px-5 my-2">
            <label>
                @nameof(ObjEmployee.PhoneNumber)
            </label>
            <InputNumber @bind-Value="ObjEmployee.PhoneNumber" class="form-control form-control-sm w-75"></InputNumber>
        </div>
        <div class="form-group d-flex flex-row justify-content-sm-between px-5 my-2">
            <label>
                @nameof(ObjEmployee.Birthday)
            </label>
            <InputDate @bind-Value="ObjEmployee.Birthday" class="form-control form-control-sm w-75"></InputDate>
        </div>
        <div class="form-group d-flex flex-row justify-content-sm-between px-5 my-2">
            <label>
                @nameof(ObjEmployee.DepartamentID)
            </label>
            <InputSelect @bind-Value="ObjEmployee.DepartamentID" class="form-control form-control-sm w-75">
                
                @foreach (Departament item in Departaments)
                {
                    <option value="@item.DepartamentID">@item.Name</option>
                }
            </InputSelect>
        </div>
    </EditForm>
    <div>
        <button @onclick="Save" class="btn btn-outline-info"> Agregar</button>
    </div>
</div>



@code {
    [Parameter]
    public EventCallback OnEmployeeAdded { get; set; }

    List<Departament> Departaments { get; set; }

    Employee ObjEmployee = new();
    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        Departaments = _DepartamentService.GetAll();
        ObjEmployee.Birthday = DateTime.Today;
    }

    private async Task Save()
    {
        try
        {
            ObjEmployee.Fired = false;
            _EmployeeService.Add(ObjEmployee);
            await OnEmployeeAdded.InvokeAsync();
            ObjEmployee = new();
        }
        catch (Exception e)
        {

            throw;
        }


    }

}
