@inject IControllerServices<ComputerModel> _ComputerService;

<h4>Computadoras Disponibles</h4>




<div class="d-flex flex-wrap gap-2">
    @foreach(var i in computerModels)
    {
        <div class="border rounded rounded-1 d-flex gap-3 p-2 flex-col">
            <div class="d-flex flex-row gap-1 justify-content-center align-middle">
            <label class="fw-bold">
                Modelo
            </label>
                <h6>
                    @i.ModelName
                </h6>
            </div>
            <div class="d-flex flex-row gap-1 justify-content-center align-middle">
                <label class="fw-bold">
                    Procesador
                </label>
                <label>
                    @i.Processor
                </label>
            </div>
            <div class="d-flex flex-row gap-1 justify-content-center align-middle">
                <label class="fw-bold">
                    RAM
                </label>
                <label>
                    @i.SizeRAM.ToString()
                </label>
            </div>
            <a href="/computers/@i.ComputerModelID" class="bg-info h-100 h-100 rounded rounded-1 p-2">
                <span class="oi oi-eye text-white" aria-hidden="true"></span>
            </a>
        </div>
    }
    

</div>


@code {
    List<ComputerModel> computerModels = new();

    protected override async Task OnInitializedAsync()
    {

        computerModels = _ComputerService.GetAll().Where(i=>i.EmployeeId == null).ToList();

        base.OnInitializedAsync();   
    }
}
