@inject PDFService pdfService
@inject IJSRuntime JS
@inject IHttpContextAccessor httpContextAccessor


<div class="shadow p-2">
    <h3>Computadoras Existentes</h3>
    <table class="table">
        <thead>
            <tr>
                <td>
                    Numero Serie
                </td>
                <td>
                    Fecha Adquisicion
                </td>
                <td>
                    Modelo
                </td>
                <td>
                    Costo
                </td>
                <td>
                    Tipo Disco
                </td>
                <td>
                    Tamaño
                </td>
                <td>
                    Tipo RAM
                </td>
                <td>
                    Tamaño
                </td>
                <td>
                    Procesador
                </td>
                <td>
                    Teclado
                </td>
                <td>
                    Encargado
                </td>
                <td colspan="2">
                    Acciones
                </td>
            </tr>
        </thead>
        <tbody>
            @if (Computers != null)
            {
                @foreach (var C in Computers)
                {
                    <tr>
                        <td>
                            @C.SerialNumber
                        </td>
                        <td>
                            @C.AdquisitionDate
                        </td>
                        <td>
                            @C.ModelName
                        </td>
                        <td>
                            @C.Cost
                        </td>
                        @if (C.HaveSSD)
                        {
                            <td>SSD</td>
                        }
                        else
                        {
                            <td>HDD</td>
                        }
                        <td>
                            @C.SizeDisk
                        </td>
                        <td>
                            @C.RAMType
                        </td>
                        <td>
                            @C.SizeRAM
                        </td>
                        <td>
                            @C.Processor
                        </td>
                        <td>
                            @C.KeyboardLayout
                        </td>
                        @if (C.Employee != null && !C.Employee.Fired)
                        {
                            <td>@C.Employee.Name @C.Employee.LastName</td>
                        }
                        else if (C.Employee != null && C.Employee.Fired)
                        {
                            <td class="text-danger">@C.Employee.Name @C.Employee.LastName (Despedido)</td>
                        }
                        else
                        {
                            <td>Sin Asignar</td>
                        }

                        @if (C.Employee != null)
                        {
                            <td>
                                <button @onclick="()=>DownloadPDF(C)" class="btn btn-sm btn-outline-info">Documento Entrega</button>
                            </td>
                        }
                        else
                        {
                            <td>
                                <button class="btn btn-sm btn-outline-warning">No disponible</button>
                            </td>
                        }
                        <td>
                            <a href="/computers/@C.ComputerModelID" class="btn btn-sm btn-outline-info">Ver</a>
                        </td>
                        <td>
                            <a href="/computers/edit/@C.ComputerModelID" class="btn btn-sm btn-outline-success">Editar</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>







@code {
    [Parameter]
    public List<ComputerModel> Computers { get; set; }
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        StateHasChanged(); // Notificar a Blazor que se han actualizado los parámetros y debe renderizar de nuevo
    }


    private async Task DownloadPDF(ComputerModel e)
    {
        try
        {
            byte[] pdfBytes = await pdfService.GeneratePDFComputer(e);


            // Convertir los bytes del PDF a una cadena base64 para pasarlos a JavaScript
            string pdfBase64 = Convert.ToBase64String(pdfBytes);

            // Invocar una función JavaScript para iniciar la descarga del PDF
            await JS.InvokeVoidAsync("downloadPDF", pdfBase64, $"Entrega Computadora {e.Employee.Name} {e.Employee.LastName} {DateTime.Now.ToShortTimeString()}.pdf");
        }
        catch (Exception ec)
        {
            throw;
        }
    }
}
