@inject PDFService pdfService
@inject IJSRuntime JS
@inject IControllerServices<ComputerModel> _ComputerService
@inject IHttpContextAccessor httpContextAccessor


<div class="shadow p-2 rounded ">
    <div class="d-flex flex-row justify-content-between p-2">
        <h3 class="w-100">Computadoras Existentes</h3>
        <input type="text" placeholder="Busqueda" @onchange="@(e => Search(((ChangeEventArgs)e).Value.ToString()))" class="form-control w-25" />
    </div>

    <table class="table table-sm table-hover">
        <thead>
            <tr>
                <td>
                    Numero Serie
                </td>
                <td>
                    Fecha Adquisicion
                </td>
                <td>
                    Modelo
                </td>
                <AuthorizeView Roles="Administrador,Lector">
                    <Authorized>
                        <td>
                            Costo
                        </td>
                    </Authorized>
                    <NotAuthorized>

                    </NotAuthorized>
                </AuthorizeView>
                <td>
                    Tipo Disco
                </td>
                <td>
                    Tamaño
                </td>
                <td>
                    Tipo RAM
                </td>
                <td>
                    Tamaño
                </td>
                <td>
                    Procesador
                </td>
                <td>
                    Teclado
                </td>
                <td>
                    Encargado
                </td>
                <td colspan="3">
                    Acciones
                </td>
            </tr>
        </thead>
        <tbody>
            @if (computerstemp != null)
            {
                @foreach (var C in computerstemp)
                {
                    <tr>
                        <td>
                            @C.SerialNumber
                        </td>
                        <td>
                            @C.AdquisitionDate.ToShortDateString()
                        </td>
                        <td>
                            @C.ModelName
                        </td>
                        <AuthorizeView Roles="Administrador,Lector">
                            <Authorized>
                                <td>
                                    $ @C.Cost
                                </td>
                            </Authorized>
                            <NotAuthorized>

                            </NotAuthorized>
                        </AuthorizeView>


                        @if (C.HaveSSD)
                        {
                            <td>SSD</td>
                        }
                        else
                        {
                            <td>HDD</td>
                        }
                        <td>
                            @C.SizeDisk GB
                        </td>
                        <td>
                            @C.RAMType
                        </td>
                        <td>
                            @C.SizeRAM GB
                        </td>
                        <td>
                            @C.Processor
                        </td>
                        <td>
                            @C.KeyboardLayout
                        </td>
                        @if (C.Employee != null && !C.Employee.Fired)
                        {
                            <td>@C.Employee.Name @C.Employee.LastName</td>
                        }
                        else if (C.Employee != null && C.Employee.Fired)
                        {
                            <td class="text-danger">@C.Employee.Name @C.Employee.LastName (Despedido)</td>
                        }
                        else
                        {
                            <td>Sin Asignar</td>
                        }
                        <AuthorizeView Roles="Administrador">
                            <Authorized>
                                <td class="d-flex flex-row gap-1">
                                    @if (C.Employee != null)
                                    {
                                        <button @onclick="()=>DownloadPDF(C)" class="bg-warning border-0 h-100 h-100 rounded rounded-1 p-2">
                                            <span class="oi oi-document text-white" aria-hidden="true"></span>
                                        </button>
                                    }
                                    else
                                    {

                                        <button class="btn btn-sm btn-outline-warning">No disponible</button>

                                    }
                                    <a href="/computers/@C.ComputerModelID" class="bg-info h-100 h-100 rounded rounded-1 p-2">
                                        <span class="oi oi-eye text-white" aria-hidden="true"></span>
                                    </a>
                                    <a href="/computers/edit/@C.ComputerModelID" class="bg-success h-100 h-100 rounded rounded-1 p-2">
                                        <span class="oi oi-pencil text-white" aria-hidden="true"></span>
                                    </a>
                                    <button @onclick="()=>Disable(C)" class="bg-danger h-100 h-100 rounded rounded-1 p-2">
                                        <span class="oi oi-delete text-white" aria-hidden="true"></span>
                                    </button>
                                </td>

                            </Authorized>
                            <NotAuthorized>
                                <td class="d-flex flex-row gap-1">
                                    @if (C.Employee != null)
                                    {
                                        <button @onclick="()=>DownloadPDF(C)" class="bg-warning border-0 h-100 h-100 rounded rounded-1 p-2">
                                            <span class="oi oi-document text-white" aria-hidden="true"></span>
                                        </button>
                                    }
                                    else
                                    {

                                        <button class="btn btn-sm btn-outline-warning">No disponible</button>

                                    }
                                </td>
                            </NotAuthorized>
                        </AuthorizeView>

                        
                    </tr>
                }
            }
        </tbody>
    </table>
</div>







@code {
    [Parameter]
    public List<ComputerModel> Computers { get; set; }
    private List<ComputerModel> computerstemp = new();

    

    protected override void OnParametersSet()
    {
        computerstemp = Computers;
        base.OnParametersSet();
        StateHasChanged(); // Notificar a Blazor que se han actualizado los parámetros y debe renderizar de nuevo
    }



    private async Task Disable(ComputerModel e)
    {
        _ComputerService.Delete(e);
        Computers.Remove(e);
    }

    private void Search(string SearchValue="")
    {
        if (!string.IsNullOrEmpty(SearchValue))
        {
            computerstemp = (from i in Computers
                             where i.SerialNumber.ToLower().Contains(SearchValue.ToLower()) || i.ModelName.ToLower().Contains(SearchValue.ToLower())
                             select i)
                .ToList();
       }
        else
        {
            computerstemp = Computers;
        }
        
    }

    private async Task DownloadPDF(ComputerModel e)
    {
        try
        {
            byte[] pdfBytes = await pdfService.GeneratePDFComputer(e);


            // Convertir los bytes del PDF a una cadena base64 para pasarlos a JavaScript
            string pdfBase64 = Convert.ToBase64String(pdfBytes);

            // Invocar una función JavaScript para iniciar la descarga del PDF
            await JS.InvokeVoidAsync("downloadPDF", pdfBase64, $"Entrega Computadora {e.Employee.Name} {e.Employee.LastName} {DateTime.Now.ToShortTimeString()}.pdf");
        }
        catch (Exception ec)
        {
            throw;
        }
    }
}
