@inject IControllerServices<SmartPhoneModel> _SmartPhoneService;


<div class="shadow p-2 rounded ">
<div class="d-flex flex-row justify-content-between p-2">
    <h3 class="w-100">Telefonos</h3>
    <input type="text" placeholder="Busqueda" @onchange="@(e => Search(((ChangeEventArgs)e).Value.ToString()))" class="form-control w-25" />
</div>


<table class="table">
    <thead>
        <tr>
            <th>
                Phone Number
            </th>
      
            <th>
                Fecha de Adquisicion
            </th>
   
            <th>
                Marca
            </th>
      
            <th>
                Modelo
            </th>
        
            <th>
                N Serie
            </th>
       
            <th>
                Costo
            </th>
     
            <th>
                Estado
            </th>
     
            <th>
                Responsable
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach(SmartPhoneModel i in SmartPhonestemp)
        {
           
            _style=(i.isActive)? "":"text-danger italic";

                <tr class="@_style">
                    <td>
                        @i.PhoneNumber
                    </td>
                    <td>
                        @i.AdquisitionDate.ToLongDateString()
                    </td>
                    <td>
                        @i.Brand.Name
                    </td>
                    <td>
                        @i.PhoneModel
                    </td>
                    <td>
                        @i.PhoneSerial
                    </td>
                    <td>
                        @i.Cost
                    </td>
                    @if (i.isActive)
                    {
                        <td>
                            Teléfono Activo
                        </td>
                    }
                    else
                    {
                        <td>
                            Inactivo
                        </td>
                    }

                        <AuthorizeView Roles="Administrador">
                            <Authorized>
                                <td class="d-flex flex-row gap-1">
                                    <a href="/phone-number-user" class="btn btn-outline-success">Asignación</a>
                                    <a href="/smartphone/@i.SmartPhoneModelId" class="bg-info h-100 h-100 rounded rounded-1 p-2">
                                        <span class="oi oi-eye text-white" aria-hidden="true"></span>
                                    </a>
                                    <a href="/smartphone/edit/@i.SmartPhoneModelId" class="bg-success h-100 h-100 rounded rounded-1 p-2">
                                        <span class="oi oi-pencil text-white" aria-hidden="true"></span>
                                    </a>
                                    <button @onclick="()=> Disable(i)" class="bg-danger h-100 h-100 rounded rounded-1 p-2">
                                        <span class="oi oi-delete text-white" aria-hidden="true"></span>
                                    </button>
                                </td>
                            </Authorized>
                            <NotAuthorized>
                            </NotAuthorized>
                        </AuthorizeView>
                </tr>

        }
    </tbody>
</table>

</div>





@code {
    [Parameter]
    public List<SmartPhoneModel> SmartPhones { get; set; }
    string _style = "";
    private List<SmartPhoneModel> SmartPhonestemp = new();

    private void Disable(SmartPhoneModel e)
    {
        _SmartPhoneService.Delete(e);
        SmartPhones.Remove(e);
    }

    protected override async Task OnInitializedAsync()
    {
        SmartPhonestemp = SmartPhones?.OrderBy(e=>e.Brand.Name).ThenBy(e=>e.PhoneModel).ToList();   
        base.OnInitializedAsync();   
    }

    private void Search(string SearchValue = "")
    {
        if (!string.IsNullOrEmpty(SearchValue))
        {
            SmartPhonestemp = (from i in SmartPhones
                             where i.PhoneSerial.ToLower().Contains(SearchValue.ToLower()) || i.PhoneModel.ToLower().Contains(SearchValue.ToLower())
                             select i)
                .ToList();
        }
        else
        {
            SmartPhonestemp = SmartPhones;
        }

    }

}
