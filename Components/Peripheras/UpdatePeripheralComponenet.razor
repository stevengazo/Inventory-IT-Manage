@inject IControllerServices<PeripheralModel> _PeripheralsService;
@inject IControllerServices<Brand> _BrandService;

@inject NavigationManager Nav;



        <EditForm Model="ObjPeripheral" class="d-flex flex-column gap-1">
            <div class="form-group d-flex flex-row justify-content-between">
                <label class="w-25">
                    Nombre
                </label>
                <InputText @bind-Value="ObjPeripheral.Name" class="form-text w-75"></InputText>
            </div>
            <div class="form-group d-flex flex-row justify-content-between">
                <label class="w-25">
                    Fecha Adquisición
                </label>
                <InputDate @bind-Value="ObjPeripheral.AdquisitionDate" class="form-control w-75"></InputDate>
            </div>
            <div class="form-group d-flex flex-row justify-content-between">
                <label class="w-25">
                    Modelo
                </label>
                <InputText @bind-Value="ObjPeripheral.Model" class="form-text w-75"></InputText>
            </div>
            <div class="form-group d-flex flex-row justify-content-between">
                <label class="w-25">
                    Numero de Serie
                </label>
                <InputText @bind-Value="ObjPeripheral.SerialNumber" class="form-text w-75"></InputText>
            </div>
            <div class="form-group d-flex flex-row justify-content-between">
                <label class="w-25">
                    Modelo
                </label>
                <InputText @bind-Value="ObjPeripheral.Model" class="form-text w-75"></InputText>
            </div>
            <div class="form-group d-flex flex-row justify-content-between">
                <label class="w-25">
                    Costo
                </label>
                <InputNumber @bind-Value="ObjPeripheral.Cost" class="form-control w-75"></InputNumber>
            </div>
            <div class="form-group d-flex flex-row justify-content-between">
                <label class="w-25">
                    Tipo
                </label>
                <InputSelect @bind-Value="ObjPeripheral.Type" class="form-select w-75">
                    <option "Audifonos">Audifonos</option>
                    <option "Teclado">Teclado</option>
                    <option "Telefono Oficina">Telefono Oficina</option>
                    <option "Monitor">Monitor</option>
                    <option "Parlante">Proyector</option>
                    <option "Camara">Camara</option>
                    <option "Otro">Otro</option>
                </InputSelect>
            </div>
            <div class="form-group d-flex flex-row justify-content-between">
                <label class="w-25">
                    Descripción
                </label>
                <InputTextArea @bind-Value="ObjPeripheral.Description" class="form-text w-75"></InputTextArea>
            </div>
            <div class="form-group d-flex flex-row justify-content-between">
                <label class="w-25">
                    Activo
                </label>
                <InputCheckbox @bind-Value="ObjPeripheral.IsActive" class="form-check w-75"></InputCheckbox>
            </div>

            <div class="form-group d-flex flex-row justify-content-between">
                <label class="w-25">
                    Marca
                </label>
                <InputSelect @bind-Value="ObjPeripheral.BrandId" class="form-select w-75">
            <option value="0"> Sin Asignar </option>
                    @foreach (Brand item in Brands)
                    {
                
                        <option value="@item.BrandId"> @item.Name </option>
                    }
                </InputSelect>
            </div>
        </EditForm>
        <button @onclick="Update" class="btn btn-outline-info">
            Actualizar
        </button>
        <button  class="btn btn-outline-warning">
            Cancelar
        </button>


@code {
    [Parameter]
    public int id { get; set; }

    PeripheralModel ObjPeripheral = new();

    List<Brand> Brands = new();

    protected override async Task OnInitializedAsync()
    {
        ObjPeripheral = _PeripheralsService.GetById(id);
        Brands = _BrandService.GetAll();
        base.OnInitializedAsync();

    }

    private async Task Update()
    {
        try
        {
            ObjPeripheral.EmployeeId = (ObjPeripheral.EmployeeId == 0) ? null : ObjPeripheral.EmployeeId;
            ObjPeripheral.Employee = (ObjPeripheral.EmployeeId == 0) ? null : ObjPeripheral.Employee;
            _PeripheralsService.Update(ObjPeripheral);
            // Dispara el evento para indicar que se agregó una nueva computadora
            ObjPeripheral = new();
            Nav.NavigateTo($"/peripherals/{id}");
        }
        catch (Exception e)
        {

            throw e;
        }
    }
}
