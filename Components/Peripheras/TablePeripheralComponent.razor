@inject PDFService pdfService
@inject IJSRuntime JS
@inject IHttpContextAccessor httpContextAccessor




<div class="shadow p-2">
    <h3>Dispositivos Existentes</h3>
    <table class="table">
        <thead>
            <tr>
                <td>
                    Nombre
                </td>
                <td>
                    Tipo
                </td>
                <td>
                    Marca
                </td>
                <td>
                    Numero Serie
                </td>
                <td>
                    Modelo
                </td>
                <td>
                    Fecha Adquisicion
                </td>
                <td>
                    costo
                </td>
                <td>
                    Estado
                </td>
                <td>
                    Empleado
                </td>
                <td colspan="3">
                    Acciones
                </td>
            </tr>
        </thead>
        <tbody>
            @if (Peripherals != null)
            {
                @foreach (var C in Peripherals)
                {
                    <tr>
                        <td>
                            @C.Name
                        </td>
                        <td>
                            @C.Type
                        </td>
                        <td>
                            @C.Brand.Name
                        </td>
                        <td>
                            @C.SerialNumber
                        </td>
                        <td>
                            @C.Model
                        </td>
                        <td>
                            @C.Model
                        </td>
                        <td>
                            @C.AdquisitionDate.ToLongDateString()
                        </td>
                        <td>
                            @C.Cost
                        </td>
                        @if (C.Employee != null && !C.Employee.Fired)
                        {
                            <td>@C.Employee.Name @C.Employee.LastName</td>
                        }
                        else if (C.Employee != null && C.Employee.Fired)
                        {
                            <td class="text-danger">@C.Employee.Name @C.Employee.LastName (Despedido)</td>
                        }
                        else
                        {
                            <td>Sin Asignar</td>
                        }
                        <td class="d-flex flex-row gap-1">
                            @if (C.Employee != null)
                            {
                                <button @onclick="()=>DownloadPDF(C)" class="bg-warning border-0 h-100 h-100 rounded rounded-1 p-2">
                                    <span class="oi oi-document text-white" aria-hidden="true"></span>
                                </button>
                            }
                            else
                            {

                                <button class="btn btn-sm btn-outline-warning">No disponible</button>

                            }

                            <AuthorizeView Roles="Administrador">
                                <Authorized>
                                    <a href="/peripherals/@C.PeripheralModelId" class="bg-info h-100 h-100 rounded rounded-1 p-2">
                                        <span class="oi oi-eye text-white" aria-hidden="true"></span>
                                    </a>
                                </Authorized>
                                <NotAuthorized></NotAuthorized>
                            </AuthorizeView>

                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code {
    [Parameter]
    public List<PeripheralModel> Peripherals { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
    }


    private async Task DownloadPDF(PeripheralModel e)
    {
        try
        {
            byte[] pdfBytes = await pdfService.GeneratePDFPeripheral(e);


            // Convertir los bytes del PDF a una cadena base64 para pasarlos a JavaScript
            string pdfBase64 = Convert.ToBase64String(pdfBytes);

            // Invocar una función JavaScript para iniciar la descarga del PDF
            await JS.InvokeVoidAsync("downloadPDF", pdfBase64, $"Entrega Activo {e.Employee.Name} {e.Employee.LastName} {DateTime.Now.ToShortTimeString()}.pdf");
        }
        catch (Exception ec)
        {
            throw;
        }
    }
}
