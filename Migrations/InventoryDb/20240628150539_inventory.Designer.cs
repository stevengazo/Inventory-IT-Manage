// <auto-generated />
using System;
using InventoryIT.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryIT.Migrations.InventoryDb
{
    [DbContext(typeof(InventoryDbContext))]
    [Migration("20240628150539_inventory")]
    partial class inventory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InventoryIT.Model.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandId");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            BrandId = 1,
                            Name = "Dell"
                        },
                        new
                        {
                            BrandId = 2,
                            Name = "Lenovo"
                        },
                        new
                        {
                            BrandId = 3,
                            Name = "HP"
                        },
                        new
                        {
                            BrandId = 4,
                            Name = "Epson"
                        },
                        new
                        {
                            BrandId = 5,
                            Name = "Ubiquiti"
                        },
                        new
                        {
                            BrandId = 7,
                            Name = "Cisco"
                        },
                        new
                        {
                            BrandId = 8,
                            Name = "Samsung"
                        },
                        new
                        {
                            BrandId = 9,
                            Name = "Xiaomi"
                        },
                        new
                        {
                            BrandId = 10,
                            Name = "Apple"
                        },
                        new
                        {
                            BrandId = 11,
                            Name = "Huawei"
                        });
                });

            modelBuilder.Entity("InventoryIT.Model.ComputerModel", b =>
                {
                    b.Property<int>("ComputerModelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComputerModelID"), 1L, 1);

                    b.Property<DateTime>("AdquisitionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Cost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("HasNumericKeyboard")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveSSD")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("KeyboardLayout")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAMType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SizeDisk")
                        .HasColumnType("int");

                    b.Property<int>("SizeRAM")
                        .HasColumnType("int");

                    b.HasKey("ComputerModelID");

                    b.HasIndex("BrandId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Computer");
                });

            modelBuilder.Entity("InventoryIT.Model.Departament", b =>
                {
                    b.Property<int>("DepartamentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartamentID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartamentID");

                    b.ToTable("Departament");

                    b.HasData(
                        new
                        {
                            DepartamentID = 1,
                            Name = "Gerencia"
                        },
                        new
                        {
                            DepartamentID = 2,
                            Name = "Administracion"
                        },
                        new
                        {
                            DepartamentID = 3,
                            Name = "Financiero"
                        },
                        new
                        {
                            DepartamentID = 4,
                            Name = "Proyectos"
                        },
                        new
                        {
                            DepartamentID = 5,
                            Name = "Operativo"
                        },
                        new
                        {
                            DepartamentID = 6,
                            Name = "Arquitectura"
                        },
                        new
                        {
                            DepartamentID = 7,
                            Name = "Ventas"
                        },
                        new
                        {
                            DepartamentID = 8,
                            Name = "IT"
                        });
                });

            modelBuilder.Entity("InventoryIT.Model.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<int?>("DepartamentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Fired")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("SecondLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartamentID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("InventoryIT.Model.FileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ComputerModelID")
                        .HasColumnType("int");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ComputerModelID");

                    b.ToTable("File");
                });

            modelBuilder.Entity("InventoryIT.Model.HistoryModel", b =>
                {
                    b.Property<int>("HistoryModelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryModelID"), 1L, 1);

                    b.Property<int?>("ComputerModelID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PeripheralModelId")
                        .HasColumnType("int");

                    b.Property<int?>("SmartPhoneModelId")
                        .HasColumnType("int");

                    b.HasKey("HistoryModelID");

                    b.HasIndex("ComputerModelID");

                    b.HasIndex("PeripheralModelId");

                    b.HasIndex("SmartPhoneModelId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("InventoryIT.Model.PeripheralModel", b =>
                {
                    b.Property<int>("PeripheralModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeripheralModelId"), 1L, 1);

                    b.Property<DateTime>("AdquisitionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PeripheralModelId");

                    b.HasIndex("BrandId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Peripheral");
                });

            modelBuilder.Entity("InventoryIT.Model.Phone_Number_User_Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModification")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhoneNumberId")
                        .HasColumnType("int");

                    b.Property<int?>("SmartPhoneModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PhoneNumberId");

                    b.HasIndex("SmartPhoneModelId");

                    b.ToTable("Phone_Number_User");
                });

            modelBuilder.Entity("InventoryIT.Model.PhoneExtension", b =>
                {
                    b.Property<int>("PhoneExtensionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhoneExtensionId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Extension")
                        .HasColumnType("int");

                    b.Property<string>("Forwardings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneExtensionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumberPBX")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhoneExtensionId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PhoneExtension");
                });

            modelBuilder.Entity("InventoryIT.Model.PhoneNumber", b =>
                {
                    b.Property<int>("PhoneNumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhoneNumberId"), 1L, 1);

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IMEIs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Operator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhoneNumberId");

                    b.ToTable("PhoneNumber");
                });

            modelBuilder.Entity("InventoryIT.Model.SmartPhoneModel", b =>
                {
                    b.Property<int>("SmartPhoneModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SmartPhoneModelId"), 1L, 1);

                    b.Property<DateTime>("AdquisitionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Cost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneSerial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("SmartPhoneModelId");

                    b.HasIndex("BrandId");

                    b.ToTable("SmartPhone");
                });

            modelBuilder.Entity("InventoryIT.Model.ComputerModel", b =>
                {
                    b.HasOne("InventoryIT.Model.Brand", "Brand")
                        .WithMany("Computers")
                        .HasForeignKey("BrandId");

                    b.HasOne("InventoryIT.Model.Employee", "Employee")
                        .WithMany("computer_Models")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Brand");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("InventoryIT.Model.Employee", b =>
                {
                    b.HasOne("InventoryIT.Model.Departament", "Departament")
                        .WithMany("Employees")
                        .HasForeignKey("DepartamentID");

                    b.Navigation("Departament");
                });

            modelBuilder.Entity("InventoryIT.Model.FileModel", b =>
                {
                    b.HasOne("InventoryIT.Model.ComputerModel", "ComputerModel")
                        .WithMany("Files")
                        .HasForeignKey("ComputerModelID");

                    b.Navigation("ComputerModel");
                });

            modelBuilder.Entity("InventoryIT.Model.HistoryModel", b =>
                {
                    b.HasOne("InventoryIT.Model.ComputerModel", "ComputerModel")
                        .WithMany("Histories")
                        .HasForeignKey("ComputerModelID");

                    b.HasOne("InventoryIT.Model.PeripheralModel", "PeripheralModel")
                        .WithMany("History")
                        .HasForeignKey("PeripheralModelId");

                    b.HasOne("InventoryIT.Model.SmartPhoneModel", "SmartPhoneModel")
                        .WithMany("History")
                        .HasForeignKey("SmartPhoneModelId");

                    b.Navigation("ComputerModel");

                    b.Navigation("PeripheralModel");

                    b.Navigation("SmartPhoneModel");
                });

            modelBuilder.Entity("InventoryIT.Model.PeripheralModel", b =>
                {
                    b.HasOne("InventoryIT.Model.Brand", "Brand")
                        .WithMany("Peripherals")
                        .HasForeignKey("BrandId");

                    b.HasOne("InventoryIT.Model.Employee", "Employee")
                        .WithMany("peripherals")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Brand");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("InventoryIT.Model.Phone_Number_User_Model", b =>
                {
                    b.HasOne("InventoryIT.Model.Employee", "Employee")
                        .WithMany("phone_Number_User_Models")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("InventoryIT.Model.PhoneNumber", "PhoneNumber")
                        .WithMany("Phone_Number_User")
                        .HasForeignKey("PhoneNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryIT.Model.SmartPhoneModel", "PhoneNumberModel")
                        .WithMany("Phone_Number_User_s")
                        .HasForeignKey("SmartPhoneModelId");

                    b.Navigation("Employee");

                    b.Navigation("PhoneNumber");

                    b.Navigation("PhoneNumberModel");
                });

            modelBuilder.Entity("InventoryIT.Model.PhoneExtension", b =>
                {
                    b.HasOne("InventoryIT.Model.Employee", "Employee")
                        .WithMany("phoneExtensions")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("InventoryIT.Model.SmartPhoneModel", b =>
                {
                    b.HasOne("InventoryIT.Model.Brand", "Brand")
                        .WithMany("SmartPhones")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("InventoryIT.Model.Brand", b =>
                {
                    b.Navigation("Computers");

                    b.Navigation("Peripherals");

                    b.Navigation("SmartPhones");
                });

            modelBuilder.Entity("InventoryIT.Model.ComputerModel", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Histories");
                });

            modelBuilder.Entity("InventoryIT.Model.Departament", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("InventoryIT.Model.Employee", b =>
                {
                    b.Navigation("computer_Models");

                    b.Navigation("peripherals");

                    b.Navigation("phoneExtensions");

                    b.Navigation("phone_Number_User_Models");
                });

            modelBuilder.Entity("InventoryIT.Model.PeripheralModel", b =>
                {
                    b.Navigation("History");
                });

            modelBuilder.Entity("InventoryIT.Model.PhoneNumber", b =>
                {
                    b.Navigation("Phone_Number_User");
                });

            modelBuilder.Entity("InventoryIT.Model.SmartPhoneModel", b =>
                {
                    b.Navigation("History");

                    b.Navigation("Phone_Number_User_s");
                });
#pragma warning restore 612, 618
        }
    }
}
